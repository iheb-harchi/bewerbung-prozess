pipeline {
    agent { label 'master' }

    parameters {
        string(name: 'VERSION', defaultValue: '', description: 'Version to deploy (from Nexus)')
    }

    environment {
        ARTIFACT_ID = 'bewerbung-app'
	GROUP_PATH = 'org/mycompany/bewerbung-app'
	NEXUS_URL = 'http://localhost:8081'
        NEXUS_REPO = 'bewerbung-app'
        CREDENTIALS_ID = 'nexus'

        WILDFLY_HOME = '/Users/p339442/Documents/Server/wildfly-36.0.0.Final'
        DEPLOY_NAME = 'bewerbung-app.war'
    }

    stages {
        stage('Download WAR') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: CREDENTIALS_ID,
                    usernameVariable: 'NEXUS_USER',
                    passwordVariable: 'NEXUS_PASS'
                )]) {
                    script {
                        def warUrl = "${NEXUS_URL}/repository/${NEXUS_REPO}/${GROUP_PATH}/${params.VERSION}/${ARTIFACT_ID}-${params.VERSION}.war"
                        echo "‚¨áÔ∏è Lade WAR: ${warUrl}"
                        sh "curl -u $NEXUS_USER:$NEXUS_PASS -o ${DEPLOY_NAME} ${warUrl}"
                    }
                }
            }
        }

        stage('Deploy to WildFly') {
		    steps {
		        script {
		            echo "üöÄ Starting WildFly Deployment..."
		            
		            // 1. Pr√ºfe ob WildFly CLI existiert
		            sh """
		                if [ ! -f "${WILDFLY_HOME}/bin/jboss-cli.sh" ]; then
		                    echo "‚ùå ERROR: WildFly CLI nicht gefunden unter ${WILDFLY_HOME}/bin/jboss-cli.sh"
		                    exit 1
		                fi
		            """
		            
		            // 2. Undeploy des alten WARs (falls vorhanden)
		            sh """
		                echo "‚öôÔ∏è Versuche Undeploy..."
		                ${WILDFLY_HOME}/bin/jboss-cli.sh --connect \
		                    --command="undeploy ${DEPLOY_NAME} --force" || \
		                    echo "‚ÑπÔ∏è Kein bestehendes Deployment zum Entfernen"
		            """
		            
		            // 3. Deploy des neuen WARs
		            sh """
		                echo "‚öôÔ∏è Starte Deployment von ${DEPLOY_NAME}..."
		                ${WILDFLY_HOME}/bin/jboss-cli.sh --connect \
		                    --command="deploy ${DEPLOY_NAME} --name=${DEPLOY_NAME} --force" || \
		                    (echo "‚ùå Deployment fehlgeschlagen"; exit 1)
		            """
		            
		            // 4. Verifikation
		            sh """
		                echo "‚úîÔ∏è Verifiziere Deployment..."
		                DEPLOY_STATUS=\$(${WILDFLY_HOME}/bin/jboss-cli.sh --connect \
		                    --command="deployment-info --name=${DEPLOY_NAME}")
		                
		                echo "Deployment-Status: \$DEPLOY_STATUS"
		                if [[ ! \$DEPLOY_STATUS == *"OK"* ]]; then
		                    echo "‚ùå FEHLER: Deployment-Verifikation fehlgeschlagen"
		                    exit 1
		                fi
		            """
		            
		            echo "‚úÖ Erfolgreich deployed: ${DEPLOY_NAME}"
		        }
		    }
		}
    }

    post {
        success {
            echo "‚úÖ Deployment erfolgreich abgeschlossen"
        }
    }
}
